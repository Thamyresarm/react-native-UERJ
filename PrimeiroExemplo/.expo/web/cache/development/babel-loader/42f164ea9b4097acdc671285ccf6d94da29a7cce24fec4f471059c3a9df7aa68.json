{"ast":null,"code":"import * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 40\n      },\n      children: \"Principal!\"\n    })\n  });\n}\nfunction SettingsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 40\n      },\n      children: \"CEP!\"\n    })\n  });\n}\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Principal') {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (route.name === 'Configurações') {\n              iconName = focused ? 'ios-list' : 'ios-list';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray'\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Principal\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Configura\\xE7\\xF5es\",\n        component: SettingsScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","Text","View","Ionicons","createBottomTabNavigator","NavigationContainer","jsx","_jsx","jsxs","_jsxs","HomeScreen","style","flex","justifyContent","alignItems","children","fontWeight","fontSize","SettingsScreen","Tab","App","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component"],"sources":["/home/thamyres/Documentos/react-native-UERJ/PrimeiroExemplo/App.js"],"sourcesContent":["import * as React from 'react';\nimport {Text, View } from 'react-native';\nimport {Ionicons } from '@expo/vector-icons';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\n\nfunction HomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text style={{fontWeight: 'bold',fontSize: 40,}}>Principal!</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text style={{fontWeight: 'bold',fontSize: 40,}}>CEP!</Text>\n    </View>\n  );\n}\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            if (route.name === 'Principal') {\n              iconName = focused ? 'home': 'home-outline';\n            } else if (route.name === 'Configurações') {\n              iconName = focused ? 'ios-list' : 'ios-list';\n            }            \n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray',\n        })}\n      >\n        <Tab.Screen name=\"Principal\" component={HomeScreen} />\n        <Tab.Screen name=\"Configurações\" component={SettingsScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/B,SAAQC,QAAQ,QAAQ,oBAAoB;AAC5C,SAAQC,wBAAwB,QAAO,+BAA+B;AACtE,SAASC,mBAAmB,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/D,SAASC,UAAUA,CAAA,EAAG;EACpB,OACEH,IAAA,CAACL,IAAI;IAACS,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvER,IAAA,CAACN,IAAI;MAACU,KAAK,EAAE;QAACK,UAAU,EAAE,MAAM;QAACC,QAAQ,EAAE;MAAG,CAAE;MAAAF,QAAA,EAAC;IAAU,CAAM;EAAC,CAC9D,CAAC;AAEX;AAEA,SAASG,cAAcA,CAAA,EAAG;EACxB,OACEX,IAAA,CAACL,IAAI;IAACS,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvER,IAAA,CAACN,IAAI;MAACU,KAAK,EAAE;QAACK,UAAU,EAAE,MAAM;QAACC,QAAQ,EAAE;MAAG,CAAE;MAAAF,QAAA,EAAC;IAAI,CAAM;EAAC,CACxD,CAAC;AAEX;AACA,IAAMI,GAAG,GAAGf,wBAAwB,CAAC,CAAC;AAEtC,eAAe,SAASgB,GAAGA,CAAA,EAAG;EAC5B,OACEb,IAAA,CAACF,mBAAmB;IAAAU,QAAA,EAClBN,KAAA,CAACU,GAAG,CAACE,SAAS;MACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;YAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;cAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;YACjC,IAAIC,QAAQ;YACZ,IAAIN,KAAK,CAACO,IAAI,KAAK,WAAW,EAAE;cAC9BD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAE,cAAc;YAC7C,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,eAAe,EAAE;cACzCD,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,UAAU;YAC9C;YACA,OAAOpB,IAAA,CAACJ,QAAQ;cAAC4B,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC/D,CAAC;UACDI,qBAAqB,EAAE,QAAQ;UAC/BC,uBAAuB,EAAE;QAC3B,CAAC;MAAA,CAAE;MAAAlB,QAAA,GAEHR,IAAA,CAACY,GAAG,CAACe,MAAM;QAACH,IAAI,EAAC,WAAW;QAACI,SAAS,EAAEzB;MAAW,CAAE,CAAC,EACtDH,IAAA,CAACY,GAAG,CAACe,MAAM;QAACH,IAAI,EAAC,qBAAe;QAACI,SAAS,EAAEjB;MAAe,CAAE,CAAC;IAAA,CACjD;EAAC,CACG,CAAC;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
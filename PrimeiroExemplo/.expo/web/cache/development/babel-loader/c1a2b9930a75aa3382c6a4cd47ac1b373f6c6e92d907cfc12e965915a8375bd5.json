{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { NotFoundError, ExpiredError } from \"./error\";\nvar Storage = function () {\n  function Storage() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Storage);\n    var me = this;\n    me._SIZE = options.size || 1000;\n    me.sync = options.sync || {};\n    me.defaultExpires = options.defaultExpires !== undefined ? options.defaultExpires : 1000 * 3600 * 24;\n    me.enableCache = options.enableCache !== false;\n    me._s = options.storageBackend || null;\n    me._innerVersion = 11;\n    me.cache = {};\n    if (me._s && me._s.setItem) {\n      try {\n        var promiseTest = me._s.setItem('__react_native_storage_test', 'test');\n        me.isPromise = promiseTest && promiseTest.then ? true : false;\n      } catch (e) {\n        console.warn(e);\n        delete me._s;\n        throw e;\n      }\n    } else {\n      console.warn(\"Data would be lost after reload cause there is no storageBackend specified!\\n      \\nEither use localStorage(for web) or AsyncStorage(for React Native) as a storageBackend.\");\n    }\n    me._mapPromise = me.getItem('map').then(function (map) {\n      me._m = me._checkMap(map && JSON.parse(map) || {});\n    });\n  }\n  _createClass(Storage, [{\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this._s ? this.isPromise ? this._s.getItem(key) : Promise.resolve(this._s.getItem(key)) : Promise.resolve();\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, value) {\n      return this._s ? this.isPromise ? this._s.setItem(key, value) : Promise.resolve(this._s.setItem(key, value)) : Promise.resolve();\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(key) {\n      return this._s ? this.isPromise ? this._s.removeItem(key) : Promise.resolve(this._s.removeItem(key)) : Promise.resolve();\n    }\n  }, {\n    key: \"_initMap\",\n    value: function _initMap() {\n      return {\n        innerVersion: this._innerVersion,\n        index: 0,\n        __keys__: {}\n      };\n    }\n  }, {\n    key: \"_checkMap\",\n    value: function _checkMap(map) {\n      if (map && map.innerVersion && map.innerVersion === this._innerVersion) {\n        return map;\n      } else {\n        return this._initMap();\n      }\n    }\n  }, {\n    key: \"_getId\",\n    value: function _getId(key, id) {\n      return key + '_' + id;\n    }\n  }, {\n    key: \"_saveToMap\",\n    value: function _saveToMap(params) {\n      var key = params.key,\n        id = params.id,\n        data = params.data,\n        newId = this._getId(key, id),\n        m = this._m;\n      if (m[newId] !== undefined) {\n        if (this.enableCache) this.cache[newId] = JSON.parse(data);\n        return this.setItem('map_' + m[newId], data);\n      }\n      if (m[m.index] !== undefined) {\n        var oldId = m[m.index];\n        var splitOldId = oldId.split('_');\n        delete m[oldId];\n        this._removeIdInKey(splitOldId[0], splitOldId[1]);\n        if (this.enableCache) {\n          delete this.cache[oldId];\n        }\n      }\n      m[newId] = m.index;\n      m[m.index] = newId;\n      m.__keys__[key] = m.__keys__[key] || [];\n      m.__keys__[key].push(id);\n      if (this.enableCache) {\n        var cacheData = JSON.parse(data);\n        this.cache[newId] = cacheData;\n      }\n      var currentIndex = m.index;\n      if (++m.index === this._SIZE) {\n        m.index = 0;\n      }\n      this.setItem('map_' + currentIndex, data);\n      this.setItem('map', JSON.stringify(m));\n    }\n  }, {\n    key: \"save\",\n    value: function save(params) {\n      var me = this;\n      var key = params.key,\n        id = params.id,\n        rawData = params.rawData,\n        expires = params.expires;\n      if (key.toString().indexOf('_') !== -1) {\n        console.error('Please do not use \"_\" in key!');\n      }\n      var data = {\n        rawData: rawData\n      };\n      var now = new Date().getTime();\n      if (expires === undefined) {\n        expires = me.defaultExpires;\n      }\n      if (expires !== null) {\n        data.expires = now + expires;\n      }\n      data = JSON.stringify(data);\n      if (id === undefined) {\n        if (me.enableCache) {\n          var cacheData = JSON.parse(data);\n          me.cache[key] = cacheData;\n        }\n        return me.setItem(key, data);\n      } else {\n        if (id.toString().indexOf('_') !== -1) {\n          console.error('Please do not use \"_\" in id!');\n        }\n        return this._mapPromise.then(function () {\n          return me._saveToMap({\n            key: key,\n            id: id,\n            data: data\n          });\n        });\n      }\n    }\n  }, {\n    key: \"getBatchData\",\n    value: function getBatchData(querys) {\n      var me = this;\n      var tasks = [];\n      for (var i = 0, query; query = querys[i]; i++) {\n        tasks[i] = me.load(query);\n      }\n      return Promise.all(tasks);\n    }\n  }, {\n    key: \"getBatchDataWithIds\",\n    value: function getBatchDataWithIds(params) {\n      var me = this;\n      var key = params.key,\n        ids = params.ids,\n        syncInBackground = params.syncInBackground;\n      return Promise.all(ids.map(function (id) {\n        return me.load({\n          key: key,\n          id: id,\n          syncInBackground: syncInBackground,\n          autoSync: false,\n          batched: true\n        });\n      })).then(function (results) {\n        return new Promise(function (resolve, reject) {\n          var ids = results.filter(function (value) {\n            return value.syncId !== undefined;\n          });\n          if (!ids.length) {\n            return resolve();\n          }\n          return me.sync[key]({\n            id: ids.map(function (value) {\n              return value.syncId;\n            }),\n            resolve: resolve,\n            reject: reject\n          });\n        }).then(function (data) {\n          return results.map(function (value) {\n            return value.syncId ? data.shift() : value;\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_lookupGlobalItem\",\n    value: function _lookupGlobalItem(params) {\n      var me = this,\n        ret;\n      var key = params.key;\n      if (me.enableCache && me.cache[key] !== undefined) {\n        ret = me.cache[key];\n        return me._loadGlobalItem(_objectSpread({\n          ret: ret\n        }, params));\n      }\n      return me.getItem(key).then(function (ret) {\n        return me._loadGlobalItem(_objectSpread({\n          ret: ret\n        }, params));\n      });\n    }\n  }, {\n    key: \"_loadGlobalItem\",\n    value: function _loadGlobalItem(params) {\n      var me = this;\n      var key = params.key,\n        ret = params.ret,\n        autoSync = params.autoSync,\n        syncInBackground = params.syncInBackground,\n        syncParams = params.syncParams;\n      if (ret === null || ret === undefined) {\n        if (autoSync && me.sync[key]) {\n          return new Promise(function (resolve, reject) {\n            return me.sync[key]({\n              resolve: resolve,\n              reject: reject,\n              syncParams: syncParams\n            });\n          });\n        }\n        return Promise.reject(new NotFoundError(JSON.stringify(params)));\n      }\n      if (typeof ret === 'string') {\n        ret = JSON.parse(ret);\n        if (this.enableCache) {\n          this.cache[key] = ret;\n        }\n      }\n      var now = new Date().getTime();\n      if (ret.expires < now) {\n        if (autoSync && me.sync[key]) {\n          if (syncInBackground) {\n            me.sync[key]({\n              syncParams: syncParams\n            });\n            return Promise.resolve(ret.rawData);\n          }\n          return new Promise(function (resolve, reject) {\n            return me.sync[key]({\n              resolve: resolve,\n              reject: reject,\n              syncParams: syncParams\n            });\n          });\n        }\n        return Promise.reject(new ExpiredError(JSON.stringify(params)));\n      }\n      return Promise.resolve(ret.rawData);\n    }\n  }, {\n    key: \"_noItemFound\",\n    value: function _noItemFound(params) {\n      var me = this;\n      var key = params.key,\n        id = params.id,\n        autoSync = params.autoSync,\n        syncParams = params.syncParams;\n      if (me.sync[key]) {\n        if (autoSync) {\n          return new Promise(function (resolve, reject) {\n            return me.sync[key]({\n              id: id,\n              syncParams: syncParams,\n              resolve: resolve,\n              reject: reject\n            });\n          });\n        }\n        return Promise.resolve({\n          syncId: id\n        });\n      }\n      return Promise.reject(new NotFoundError(JSON.stringify(params)));\n    }\n  }, {\n    key: \"_loadMapItem\",\n    value: function _loadMapItem(params) {\n      var me = this;\n      var ret = params.ret,\n        key = params.key,\n        id = params.id,\n        autoSync = params.autoSync,\n        batched = params.batched,\n        syncInBackground = params.syncInBackground,\n        syncParams = params.syncParams;\n      if (ret === null || ret === undefined) {\n        return me._noItemFound(params);\n      }\n      if (typeof ret === 'string') {\n        ret = JSON.parse(ret);\n        var _key = params.key,\n          _id = params.id;\n        var newId = me._getId(_key, _id);\n        if (this.enableCache) {\n          this.cache[newId] = ret;\n        }\n      }\n      var now = new Date().getTime();\n      if (ret.expires < now) {\n        if (autoSync && me.sync[key]) {\n          if (syncInBackground) {\n            me.sync[key]({\n              id: id,\n              syncParams: syncParams\n            });\n            return Promise.resolve(ret.rawData);\n          }\n          return new Promise(function (resolve, reject) {\n            return me.sync[key]({\n              id: id,\n              resolve: resolve,\n              reject: reject,\n              syncParams: syncParams\n            });\n          });\n        }\n        if (batched) {\n          return Promise.resolve({\n            syncId: id\n          });\n        }\n        return Promise.reject(new ExpiredError(JSON.stringify(params)));\n      }\n      return Promise.resolve(ret.rawData);\n    }\n  }, {\n    key: \"_lookUpInMap\",\n    value: function _lookUpInMap(params) {\n      var me = this,\n        m = me._m,\n        ret;\n      var key = params.key,\n        id = params.id;\n      var newId = me._getId(key, id);\n      if (me.enableCache && me.cache[newId]) {\n        ret = me.cache[newId];\n        return me._loadMapItem(_objectSpread({\n          ret: ret\n        }, params));\n      }\n      if (m[newId] !== undefined) {\n        return me.getItem('map_' + m[newId]).then(function (ret) {\n          return me._loadMapItem(_objectSpread({\n            ret: ret\n          }, params));\n        });\n      }\n      return me._noItemFound(_objectSpread({\n        ret: ret\n      }, params));\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(params) {\n      var _this = this;\n      return this._mapPromise.then(function () {\n        var me = _this,\n          m = me._m;\n        var key = params.key,\n          id = params.id;\n        if (id === undefined) {\n          if (me.enableCache && me.cache[key]) {\n            delete me.cache[key];\n          }\n          return me.removeItem(key);\n        }\n        var newId = me._getId(key, id);\n        if (m[newId] !== undefined) {\n          if (me.enableCache && me.cache[newId]) {\n            delete me.cache[newId];\n          }\n          me._removeIdInKey(key, id);\n          var idTobeDeleted = m[newId];\n          delete m[newId];\n          me.setItem('map', JSON.stringify(m));\n          return me.removeItem('map_' + idTobeDeleted);\n        }\n      });\n    }\n  }, {\n    key: \"_removeIdInKey\",\n    value: function _removeIdInKey(key, id) {\n      var indexTobeRemoved = this._m.__keys__[key].indexOf(id);\n      if (indexTobeRemoved !== -1) {\n        this._m.__keys__[key].splice(indexTobeRemoved, 1);\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load(params) {\n      var me = this;\n      var key = params.key,\n        id = params.id,\n        _params$autoSync = params.autoSync,\n        autoSync = _params$autoSync === void 0 ? true : _params$autoSync,\n        _params$syncInBackgro = params.syncInBackground,\n        syncInBackground = _params$syncInBackgro === void 0 ? true : _params$syncInBackgro,\n        syncParams = params.syncParams;\n      return me._mapPromise.then(function () {\n        return new Promise(function (resolve, reject) {\n          if (id === undefined) {\n            return resolve(me._lookupGlobalItem({\n              key: key,\n              resolve: resolve,\n              reject: reject,\n              autoSync: autoSync,\n              syncInBackground: syncInBackground,\n              syncParams: syncParams\n            }));\n          }\n          return resolve(me._lookUpInMap({\n            key: key,\n            id: id,\n            resolve: resolve,\n            reject: reject,\n            autoSync: autoSync,\n            syncInBackground: syncInBackground,\n            syncParams: syncParams\n          }));\n        });\n      });\n    }\n  }, {\n    key: \"clearMap\",\n    value: function clearMap() {\n      var _this2 = this;\n      this.removeItem('map').then(function () {\n        _this2._m = _this2._initMap();\n      });\n    }\n  }, {\n    key: \"clearMapForKey\",\n    value: function clearMapForKey(key) {\n      var _this3 = this;\n      return this._mapPromise.then(function () {\n        var tasks = _this3._m.__keys__[key].map(function (id) {\n          return _this3.remove({\n            key: key,\n            id: id\n          });\n        });\n        return Promise.all(tasks);\n      });\n    }\n  }, {\n    key: \"getIdsForKey\",\n    value: function getIdsForKey(key) {\n      var _this4 = this;\n      return this._mapPromise.then(function () {\n        return _this4._m.__keys__[key] || [];\n      });\n    }\n  }, {\n    key: \"getAllDataForKey\",\n    value: function getAllDataForKey(key, options) {\n      var _this5 = this;\n      options = Object.assign({\n        syncInBackground: true\n      }, options);\n      return this.getIdsForKey(key).then(function (ids) {\n        var querys = ids.map(function (id) {\n          return {\n            key: key,\n            id: id,\n            syncInBackground: options.syncInBackground\n          };\n        });\n        return _this5.getBatchData(querys);\n      });\n    }\n  }]);\n  return Storage;\n}();\nexport { Storage as default };","map":{"version":3,"names":["NotFoundError","ExpiredError","Storage","options","arguments","length","undefined","_classCallCheck","me","_SIZE","size","sync","defaultExpires","enableCache","_s","storageBackend","_innerVersion","cache","setItem","promiseTest","isPromise","then","e","console","warn","_mapPromise","getItem","map","_m","_checkMap","JSON","parse","_createClass","key","value","Promise","resolve","removeItem","_initMap","innerVersion","index","__keys__","_getId","id","_saveToMap","params","data","newId","m","oldId","splitOldId","split","_removeIdInKey","push","cacheData","currentIndex","stringify","save","rawData","expires","toString","indexOf","error","now","Date","getTime","getBatchData","querys","tasks","i","query","load","all","getBatchDataWithIds","ids","syncInBackground","autoSync","batched","results","reject","filter","syncId","shift","_lookupGlobalItem","ret","_loadGlobalItem","_objectSpread","syncParams","_noItemFound","_loadMapItem","_lookUpInMap","remove","_this","idTobeDeleted","indexTobeRemoved","splice","_params$autoSync","_params$syncInBackgro","clearMap","_this2","clearMapForKey","_this3","getIdsForKey","_this4","getAllDataForKey","_this5","Object","assign","default"],"sources":["/home/thamyres/Documentos/react-native-UERJ/PrimeiroExemplo/node_modules/react-native-storage/storage.js"],"sourcesContent":["/*\n *  local storage(web/react native) wrapper\n *  sunnylqm 2016-12-26\n *  version 0.1.5\n */\nimport { NotFoundError, ExpiredError } from './error';\n\nexport default class Storage {\n  constructor(options = {}) {\n    let me = this;\n\n    me._SIZE = options.size || 1000;   // maximum capacity\n    me.sync = options.sync || {};      // remote sync method\n    me.defaultExpires = options.defaultExpires !== undefined ?\n      options.defaultExpires : 1000 * 3600 * 24;\n    me.enableCache = options.enableCache !== false;\n    me._s = options.storageBackend || null;\n    me._innerVersion = 11;\n    me.cache = {};\n\n    if (me._s && me._s.setItem) {\n      try {\n        var promiseTest = me._s.setItem('__react_native_storage_test', 'test');\n        me.isPromise = (promiseTest && promiseTest.then) ? true : false;\n      }\n      catch (e) {\n        console.warn(e);\n        delete me._s;\n        throw e;\n      }\n    } else {\n      console.warn(`Data would be lost after reload cause there is no storageBackend specified!\n      \\nEither use localStorage(for web) or AsyncStorage(for React Native) as a storageBackend.`)\n    }\n\n    me._mapPromise = me.getItem('map').then(map => {\n      me._m = me._checkMap(map && JSON.parse(map) || {});\n      // delete me._mapPromise;\n    });\n  }\n  getItem(key) {\n    return this._s\n      ?\n      this.isPromise ? this._s.getItem(key) : Promise.resolve(this._s.getItem(key))\n      :\n      Promise.resolve();\n  }\n  setItem(key, value) {\n    return this._s\n      ?\n      this.isPromise ? this._s.setItem(key, value) : Promise.resolve(this._s.setItem(key, value))\n      :\n      Promise.resolve();\n  }\n  removeItem(key) {\n    return this._s\n      ? this.isPromise ? this._s.removeItem(key) : Promise.resolve(this._s.removeItem(key))\n      :\n      Promise.resolve();\n  }\n  _initMap() {\n    return {\n      innerVersion: this._innerVersion,\n      index: 0,\n      __keys__: {}\n    };\n  }\n  _checkMap(map) {\n    if(map && map.innerVersion && map.innerVersion === this._innerVersion ) {\n      return map;\n    }\n    else {\n      return this._initMap();\n    }\n  }\n  _getId(key, id) {\n    return key + '_' + id;\n  }\n  _saveToMap(params) {\n    let { key, id, data } = params,\n      newId = this._getId(key, id),\n      m = this._m;\n    if(m[newId] !== undefined) {\n      //update existed data\n      if(this.enableCache) this.cache[newId] = JSON.parse(data);\n      return this.setItem('map_' + m[newId], data);\n    }\n    if(m[m.index] !== undefined){\n      //loop over, delete old data\n      let oldId = m[m.index];\n      let splitOldId = oldId.split('_')\n      delete m[oldId];\n      this._removeIdInKey(splitOldId[0], splitOldId[1])\n      if(this.enableCache) {\n        delete this.cache[oldId];\n      }\n    }\n    m[newId] = m.index;\n    m[m.index] = newId;\n\n    m.__keys__[key] = m.__keys__[key] || [];\n    m.__keys__[key].push(id);\n\n    if(this.enableCache) {\n      const cacheData = JSON.parse(data);\n      this.cache[newId] = cacheData;\n    }\n    let currentIndex = m.index;\n    if(++m.index === this._SIZE) {\n      m.index = 0;\n    }\n    this.setItem('map_' + currentIndex, data);\n    this.setItem('map', JSON.stringify(m));\n  }\n  save(params) {\n    let me = this;\n    let { key, id, rawData, expires } = params;\n    if (key.toString().indexOf('_') !== -1) {\n      console.error('Please do not use \"_\" in key!');\n    }\n    let data = {\n      rawData\n    };\n    let now = new Date().getTime();\n    if (expires === undefined) {\n      expires = me.defaultExpires;\n    }\n    if(expires !== null) {\n      data.expires = now + expires;\n    }\n    data = JSON.stringify(data);\n    if(id === undefined) {\n      if(me.enableCache) {\n        const cacheData = JSON.parse(data);\n        me.cache[key] = cacheData;\n      }\n      return me.setItem(key, data);\n    }\n    else {\n      if(id.toString().indexOf('_') !== -1) {\n        console.error('Please do not use \"_\" in id!');\n      }\n      return this._mapPromise.then(() => me._saveToMap({\n        key,\n        id,\n        data\n      }));\n    }\n  }\n  getBatchData(querys) {\n    let me = this;\n    let tasks = [];\n    for(let i = 0, query; query = querys[i]; i++) {\n      tasks[i] = me.load(query);\n    }\n    return Promise.all(tasks);\n  }\n  getBatchDataWithIds(params) {\n    let me = this;\n    let { key, ids, syncInBackground } = params;\n\n    return Promise.all(\n      ids.map((id) => me.load({ key, id, syncInBackground, autoSync: false, batched: true }))\n    ).then((results) => {\n      return new Promise((resolve, reject) => {\n        const ids = results.filter((value) => value.syncId !== undefined);\n        if(!ids.length){\n          return resolve();\n        }\n        return me.sync[key]({\n          id: ids.map((value) => value.syncId),\n          resolve,\n          reject\n        });\n      }).then((data) => {\n        return results.map(value => {\n          return value.syncId ? data.shift() : value\n        });\n      });\n    })\n  }\n  _lookupGlobalItem(params) {\n    let me = this,\n      ret;\n    let { key } = params;\n    if(me.enableCache && me.cache[key] !== undefined) {\n      ret = me.cache[key];\n      return me._loadGlobalItem({ ret, ...params });\n    }\n    return me.getItem(key).then(ret => me._loadGlobalItem({ ret, ...params }));\n  }\n  _loadGlobalItem(params) {\n    let me = this;\n    let { key, ret, autoSync, syncInBackground, syncParams } = params;\n    if(ret === null || ret === undefined) {\n      if(autoSync && me.sync[key]) {\n        return new Promise((resolve, reject) => me.sync[key]({ resolve, reject, syncParams }));\n      }\n      return Promise.reject(new NotFoundError(JSON.stringify(params)));\n    }\n    if (typeof ret === 'string') {\n      ret = JSON.parse(ret);\n      if (this.enableCache) {\n        this.cache[key] = ret;\n      }\n    }\n    let now = new Date().getTime();\n    if(ret.expires < now) {\n      if (autoSync && me.sync[key]){\n        if(syncInBackground) {\n          me.sync[key]({ syncParams });\n          return Promise.resolve(ret.rawData);\n        }\n        return new Promise((resolve, reject) => me.sync[key]({ resolve, reject, syncParams }));\n      }\n      return Promise.reject(new ExpiredError(JSON.stringify(params)));\n    }\n    return Promise.resolve(ret.rawData);\n  }\n  _noItemFound(params) {\n    let me = this;\n    let { key, id, autoSync, syncParams } = params;\n    if(me.sync[key]) {\n      if(autoSync) {\n        return new Promise((resolve, reject) => me.sync[key]({ id, syncParams, resolve, reject }));\n      }\n      return Promise.resolve({ syncId: id });\n    }\n    return Promise.reject(new NotFoundError(JSON.stringify(params)));\n  }\n  _loadMapItem(params) {\n    let me = this;\n    let { ret, key, id, autoSync, batched, syncInBackground, syncParams } = params;\n    if(ret === null || ret === undefined) {\n      return me._noItemFound(params);\n    }\n    if(typeof ret === 'string'){\n      ret = JSON.parse(ret);\n      const { key, id } = params;\n      const newId = me._getId(key, id);\n      if (this.enableCache) {\n        this.cache[newId] = ret;\n      }\n    }\n    let now = new Date().getTime();\n    if(ret.expires < now) {\n      if(autoSync && me.sync[key]) {\n        if(syncInBackground) {\n          me.sync[key]({ id, syncParams });\n          return Promise.resolve(ret.rawData);\n        }\n        return new Promise((resolve, reject) => me.sync[key]({ id, resolve, reject, syncParams }));\n      }\n      if(batched) {\n        return Promise.resolve({ syncId: id });\n      }\n      return Promise.reject(new ExpiredError(JSON.stringify(params)));\n    }\n    return Promise.resolve(ret.rawData);\n  }\n  _lookUpInMap(params) {\n    let me = this,\n      m = me._m,\n      ret;\n    let { key, id } = params;\n    let newId = me._getId(key, id);\n    if(me.enableCache && me.cache[newId]) {\n      ret = me.cache[newId];\n      return me._loadMapItem( {ret, ...params } );\n    }\n    if(m[newId] !== undefined) {\n      return me.getItem('map_' + m[newId]).then( ret => me._loadMapItem( {ret, ...params } ) );\n    }\n    return me._noItemFound( {ret, ...params } );\n  }\n  remove(params) {\n    return this._mapPromise.then(() => {\n      let me = this,\n        m = me._m;\n      let { key, id } = params;\n\n      if(id === undefined) {\n        if(me.enableCache && me.cache[key]) {\n          delete me.cache[key];\n        }\n        return me.removeItem(key);\n      }\n      let newId = me._getId(key, id);\n\n      //remove existed data\n      if(m[newId] !== undefined) {\n        if(me.enableCache && me.cache[newId]) {\n          delete me.cache[newId];\n        }\n        me._removeIdInKey(key, id);\n        let idTobeDeleted = m[newId];\n        delete m[newId];\n        me.setItem('map', JSON.stringify(m));\n        return me.removeItem('map_' + idTobeDeleted);\n      }\n    });\n  }\n  _removeIdInKey(key, id) {\n    let indexTobeRemoved = this._m.__keys__[key].indexOf(id);\n    if (indexTobeRemoved !== -1) {\n      this._m.__keys__[key].splice(indexTobeRemoved, 1);\n    }\n  }\n  load(params) {\n    let me = this;\n    let { key, id, autoSync = true, syncInBackground = true, syncParams } = params;\n    return me._mapPromise.then(() => new Promise((resolve, reject) => {\n      if(id === undefined) {\n        return resolve(me._lookupGlobalItem({\n          key, resolve, reject, autoSync, syncInBackground, syncParams\n        }));\n      }\n      return resolve(me._lookUpInMap({\n        key, id, resolve, reject, autoSync, syncInBackground, syncParams\n      }));\n    }));\n  }\n  clearMap() {\n    this.removeItem('map').then(() => {\n      this._m = this._initMap();\n    });\n  }\n  clearMapForKey(key) {\n    return this._mapPromise.then(() => {\n      let tasks = this._m.__keys__[key].map(id => this.remove({ key, id }));\n      return Promise.all(tasks);\n    });\n  }\n  getIdsForKey(key) {\n    return this._mapPromise.then(() => {\n      return this._m.__keys__[key] || [];\n    });\n  }\n  getAllDataForKey(key, options) {\n    options = Object.assign({ syncInBackground: true }, options);\n    return this.getIdsForKey(key).then(ids => {\n      let querys = ids.map(id => ({ key, id, syncInBackground: options.syncInBackground }));\n      return this.getBatchData(querys);\n    });\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}